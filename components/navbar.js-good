// A global variable to store the original PC layout HTML for reliable reversion.
let originalPCLayout = null;

function renderNavbar() {
  const nav = document.createElement('nav');
  nav.className = 'navbar';

  // Create the auth buttons container that will be reused
  const authButtonsHTML = `
    <div class="navbar-auth" id="navbar-auth">
      <button id="signin-btn" class="auth-btn" type="button">Sign in</button>
      <button id="signup-btn" class="auth-btn" type="button">Sign up</button>
      <button id="logout-btn" class="auth-btn" style="display:none" onclick="window.logoutUser()">Logout</button>
      <span id="user-avatar" class="user-avatar" style="display:none"><img src="https://ui-avatars.com/api/?name=User" alt="User"/></span>
    </div>
  `;

  const logoHTML = `
    <div class="navbar-logo-area">
      <div class="navbar-logo-placeholder"><img src=Data/Images/jippujam.jpg></div>
    </div>
    <span class="navbar-appname">Yola AI Info Hub</span>
  `;

  nav.innerHTML = `
    <div class="navbar-container">
      <div class="navbar-left">
        ${logoHTML}
      </div>
      <div class="hamburger" id="hamburger">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </div>
      <div class="navbar-right">
        <div class="navbar-top-section">
          ${authButtonsHTML}
        </div>
        <ul class="navbar-links">
          <li><button onclick="window.loadSection('home')">Home</button></li>
          <li><button onclick="window.loadSection('eduinfo')">EduInfo</button></li>
          <li><button onclick="window.loadSection('ecoinfo')">EcoInfo</button></li>
          <li><button onclick="window.loadSection('agroinfo')">AgroInfo</button></li>
          <li><button onclick="window.loadSection('mediinfo')">MediInfo</button></li>
          <li><button onclick="window.loadSection('naviinfo')">NaviInfo</button></li>
          <li><button onclick="window.loadSection('communityinfo')">CommunityInfo</button></li>
          <li><button onclick="window.loadSection('serviinfo')">ServiInfo</button></li>
          <li><button onclick="window.loadSection('aboutinfo')">About</button></li>
        </ul>
      </div>
    </div>
  `;
  // Wire up auth button events after DOM is in place
  setTimeout(() => {
    const signinBtn = document.getElementById('signin-btn');
    const signupBtn = document.getElementById('signup-btn');
    if (signinBtn) signinBtn.onclick = () => window.loadSection('signin');
    if (signupBtn) signupBtn.onclick = () => window.loadSection('signup');
  }, 0);
  document.getElementById('navbar').innerHTML = ''; // Clear existing content
  document.getElementById('navbar').appendChild(nav);

  // Store the original PC layout HTML to revert to it later
  originalPCLayout = nav.innerHTML;

  // Handle mobile menu logic
  const mobileMenu = document.createElement('div');
  mobileMenu.className = 'mobile-menu';
  mobileMenu.innerHTML = `
    <ul class="mobile-links">
      <li><button onclick="window.loadSection('home'); mobileMenu.classList.remove('show');">Home</button></li>
      <li><button onclick="window.loadSection('eduinfo'); mobileMenu.classList.remove('show');">EduInfo</button></li>
      <li><button onclick="window.loadSection('ecoinfo'); mobileMenu.classList.remove('show');">EcoInfo</button></li>
      <li><button onclick="window.loadSection('agroinfo'); mobileMenu.classList.remove('show');">AgroInfo</button></li>
      <li><button onclick="window.loadSection('mediinfo'); mobileMenu.classList.remove('show');">MediInfo</button></li>
      <li><button onclick="window.loadSection('naviinfo'); mobileMenu.classList.remove('show');">NaviInfo</button></li>
      <li><button onclick="window.loadSection('communityinfo'); mobileMenu.classList.remove('show');">CommunityInfo</button></li>
      <li><button onclick="window.loadSection('serviinfo'); mobileMenu.classList.remove('show');">ServiInfo</button></li>
      <li><button onclick="window.loadSection('aboutinfo'); mobileMenu.classList.remove('show');">About</button></li>
    </ul>
  `;
  document.getElementById('navbar').appendChild(mobileMenu);

  const hamburger = document.getElementById('hamburger');
  hamburger.onclick = (e) => {
    e.stopPropagation();
    mobileMenu.classList.toggle('show');
    hamburger.classList.toggle('active');
  };

  // Close mobile menu when a section is loaded
  window.loadSection = (function() {
    const originalLoadSection = window.loadSection;
    return function(section) {
      if (mobileMenu.classList.contains('show')) {
        mobileMenu.classList.remove('show');
        hamburger.classList.remove('active');
      }
      return originalLoadSection(section);
    };
  })();
  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    if (mobileMenu.classList.contains('show') && !mobileMenu.contains(e.target) && e.target !== hamburger) {
      mobileMenu.classList.remove('show');
      hamburger.classList.remove('active');
    }
  });

  // Main function to handle all responsive layouts
  function handleResponsiveLayout() {
    const windowWidth = window.innerWidth;
    const navbarContainer = document.querySelector('.navbar-container');
    const navbarRight = document.querySelector('.navbar-right');
    const hamburger = document.getElementById('hamburger');

    // Restore to original PC layout before making any changes
    nav.innerHTML = originalPCLayout;

    // Re-select elements after innerHTML change
    const newNavbarContainer = document.querySelector('.navbar-container');
    const newNavbarLeft = document.querySelector('.navbar-left');
    const newNavbarRight = document.querySelector('.navbar-right');
    const newNavbarAuth = document.querySelector('.navbar-auth');
    const newNavbarLinks = document.querySelector('.navbar-links');
    const newHamburger = document.getElementById('hamburger');
    
    // Apply common styles to all views using JS
    newNavbarContainer.style.display = 'flex';
    newNavbarContainer.style.alignItems = 'center';
    newNavbarContainer.style.padding = '10px';
    
    newNavbarLeft.style.display = 'flex';
    newNavbarLeft.style.alignItems = 'center';
    
    newNavbarRight.style.display = 'flex';
    newNavbarRight.style.alignItems = 'center';
    newNavbarRight.style.listStyle = 'none';
    
    newNavbarLinks.style.display = 'flex';
    newNavbarLinks.style.listStyle = 'none';

    // Logic for different screen sizes
    if (windowWidth >= 901) {
      // PC View
      newNavbarContainer.style.justifyContent = 'space-between';
      newHamburger.style.display = 'none';

    } else if (windowWidth >= 701 && windowWidth <= 900) {
      // Tablet View
      newNavbarContainer.style.flexDirection = 'column';
      newNavbarContainer.style.justifyContent = 'flex-start';
      newNavbarContainer.style.alignItems = 'flex-start';
      
      const topRow = document.createElement('div');
      topRow.style.display = 'flex';
      topRow.style.justifyContent = 'space-between';
      topRow.style.width = '100%';
      topRow.style.marginBottom = '1rem';
      
      // Move logo and app name to the top row
      topRow.appendChild(newNavbarLeft);
      // Move auth buttons to the top row
      topRow.appendChild(newNavbarAuth);
      
      // The newNavbarLinks element is now the bottom row
      newNavbarLinks.style.width = '100%';
      newNavbarLinks.style.justifyContent = 'space-around';
      
      // Rebuild the container with the two rows
      newNavbarContainer.innerHTML = '';
      newNavbarContainer.appendChild(topRow);
      newNavbarContainer.appendChild(newNavbarLinks);
      
      newHamburger.style.display = 'none';
      
    } else {
      // Mobile View
      newNavbarContainer.style.justifyContent = 'space-between';
      newNavbarLeft.style.display = 'flex';
      newNavbarLeft.style.alignItems = 'center';
      
      newNavbarRight.style.display = 'none'; // Hide the entire right section
      
      newHamburger.style.display = 'flex';
      newHamburger.style.marginLeft = 'auto'; // Align to the right
      newHamburger.style.cursor = 'pointer';

      // Style the hamburger lines
      const lines = newHamburger.querySelectorAll('.hamburger-line');
      lines.forEach(line => {
          line.style.display = 'block';
          line.style.height = '3px';
          line.style.width = '30px';
          line.style.background = '#333';
          line.style.borderRadius = '5px';
          line.style.margin = '3px 0';
      });
    }
  }

  // Initial call to set the layout on page load
  handleResponsiveLayout();

  // Listen for window resize events
  window.addEventListener('resize', handleResponsiveLayout);

  // Highlight active section
  window.highlightActiveNav = function(section) {
    document.querySelectorAll('.navbar-links button, .mobile-menu button').forEach(btn => {
      btn.classList.remove('active');
      const btnSection = btn.textContent.trim().toLowerCase() + (btn.textContent.trim().toLowerCase().endsWith('info') ? '' : 'info');
      if (
        (section === 'aboutinfo' && btn.textContent.trim() === 'About') ||
        btnSection === section ||
        (section === 'home' && btn.textContent.trim() === 'Home')
      ) {
        btn.classList.add('active');
      }
    });
  };
}

// Export as Navbar global for compatibility
window.Navbar = {
  render: () => {
    renderNavbar();
  }
};